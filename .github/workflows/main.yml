name: Build & hot‑swap Aurora container (local image)

on:
  push:
    branches:
      - main

concurrency:
  group: deploy-aurora
  cancel-in-progress: true

jobs:
  deploy:
    runs-on:
      - self-hosted
      - DXP6800PRO

    env:
      IMAGE_NAME: aurora-app:latest
      CONTAINER_NAME: aurora

    steps:
      - name: 📥  Check out code
        uses: actions/checkout@v4

      - name: 🐳  Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️  Build & load image locally
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}
          platforms: linux/amd64

      - name: 📦  Export current env & cmd
        id: export-env
        run: |
          if docker inspect ${{ env.CONTAINER_NAME }} >/dev/null 2>&1; then
            docker container inspect ${{ env.CONTAINER_NAME }} --format '{{json .Config.Env}}' | jq -r '.[]' > /tmp/aurora-env.list
            docker container inspect ${{ env.CONTAINER_NAME }} --format '{{json .Config.Cmd}}' | jq -r '.[]' > /tmp/aurora-cmd.list
          else
            echo "Container not found – first deploy."
          fi

      - name: 🔥  Stop & remove old container (if exists)
        continue-on-error: true
        run: docker rm -f ${{ env.CONTAINER_NAME }}

      - name: 🚀  Run new container with preserved env
        run: |
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            --env-file /tmp/aurora-env.list \
            -p 3000:3000 \
            ${{ env.IMAGE_NAME }} \
            $(cat /tmp/aurora-cmd.list || true)

      - name: ✅  Smoke‑check
        run: |
          curl --fail --silent http://localhost:3000/health || (echo "Health check failed" && exit 1)
